/tracks:
  get:
    tags:
      - /tracks
    summary: get all tracks
    security: 
      - BearerAuth: []
    parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
    responses:
      '200':
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id: 
                    type: string
                  uri: 
                    type: string
                  image: 
                    type: string
                  preview_url: 
                    type: string
                  duration_ms: 
                    type: integer
                  add_user_id: 
                    type: string
                  name: 
                    type: string
                  spotify_id: 
                    type: string
                  created_at: 
                    type: string
                  spotify_data: 
                    type: object
  post:
    tags:
      - /tracks
    summary: add one track
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              spotify_id:
                type: string
              youtube_id:
                type: string
              start_time:
                type: integer
              end_time:
                type: integer
    responses:
      '201':
        content:
          application/json:
            schema:
              type: object
/tracks/{id}:
  delete:
    tags:
      - /tracks
    summary: delete one track
    security: 
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
    responses:
      '204':
        content:
          application/json:
            schema:
              type: object
/tracks/recommendation:
  get:
    tags:
      - /tracks
    summary: get recommendation tracks
    parameters:   
      - in: header
        name: device_id
        schema:
          type: string
        required: true
    responses:
      '200':
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id: 
                    type: string
                  uri: 
                    type: string
                  image: 
                    type: string
                  preview_url: 
                    type: string
                  duration_ms: 
                    type: integer
                  add_user_id: 
                    type: string
                  name: 
                    type: string
                  spotify_id: 
                    type: string
                  created_at: 
                    type: string
                  spotify_data: 
                    type: object